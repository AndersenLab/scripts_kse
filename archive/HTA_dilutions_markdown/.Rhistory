##---------------------------##
##     OPTIONAL EDITS        ##
##---------------------------##
# Will require a dilution by this number of each drug prior to adding to the lysate (10 recommended to reduce pipetting error for doses)
# If you don't want to dilute drug, use 1
dilution <- 1
# If your drug is not listed here you can add it to this file:
aliquotAmt <- read.csv("~/Dropbox/AndersenLab/RCode/HTA_dilutions/drug_aliquot_amount.csv", strip.white = TRUE)
# Always 1%
dilConc <- 0.01
# Minimum amount to pipette: 0.5 uL
min <- 0.5
# Can adjust if you want more room for error, I find 5 works well usually
leftover <- 5
##---------------------------##
##                           ##
##---------------------------##
#How many plates?
concs <- concs %>%
dplyr::mutate(totalWells = numPlates*numWells)
plates <- paste0("Need ", floor(sum(concs$totalWells/96)), " plates.")
concs <- concs %>%
dplyr::mutate(intConc = startConc / dilution)
#Drug Plates
drugconc <- concs %>%
dplyr::mutate(numWells = numWells + leftover, #Use 100 wells/plate instead of 96 wells/plate to allow for error
total_mix = numPlates * numWells * 50,
drugAmt = (total_mix * finConc) / (intConc * 1000)) %>%
dplyr::group_by(drug) %>%
dplyr::mutate(totaldrug = sum(drugAmt),
drugDilute = ceiling((totaldrug * intConc) / startConc),
dilDilute = (drugDilute * dilution) - drugDilute,
dilAmt = (total_mix * dilConc) - drugAmt,
lysate = total_mix - (drugAmt + dilAmt)) %>%
dplyr::left_join(aliquotAmt, by = "drug") %>%
dplyr::mutate(drugTubes = ifelse((drugDilute %% aliquotAmt) == 0, ceiling(drugDilute / aliquotAmt) + 1,
ceiling(drugDilute / aliquotAmt)))
# Check to make sure dilution is enough, should not pipette less than the minimum amount
tooSmall <- drugconc %>%
dplyr::filter(drugAmt < min, drugAmt > 0)
drugconc2 <- drugconc
while(nrow(tooSmall) > 0) {
drugconc2 <- drugconc2 %>%
dplyr::select(names(concs))
oldconcs <- drugconc2 %>%
dplyr::filter(!(drug %in% unique(tooSmall$drug)))
concs2 <- drugconc2 %>%
dplyr::filter(drug %in% unique(tooSmall$drug)) %>%
dplyr::mutate(intConc = intConc / 10)
newconcs <- rbind(oldconcs, concs2)
drugconc2 <- newconcs %>%
dplyr::mutate(total_mix = numPlates * numWells * 50,
drugAmt = (total_mix * finConc) / (intConc * 1000)) %>%
dplyr::group_by(drug) %>%
dplyr::mutate(totaldrug = sum(drugAmt),
drugDilute = ceiling((totaldrug * intConc) / startConc),
dilDilute = (drugDilute * startConc/intConc) - drugDilute,
dilAmt = (total_mix * dilConc) - drugAmt,
lysate = total_mix - (drugAmt + dilAmt)) %>%
dplyr::left_join(aliquotAmt, by = "drug") %>%
dplyr::mutate(drugTubes = ifelse((drugDilute %% aliquotAmt) == 0, ceiling(drugDilute / aliquotAmt) + 1,
ceiling(drugDilute / aliquotAmt)))
tooSmall <- drugconc2 %>%
dplyr::filter(drugAmt < min, drugAmt > 0)
}
concs <- drugconc2
#Special conditions
for(i in 1:length(concs$drug)){
if(concs$drug[i] %in% c("water", "DMSO")) {
concs$dilAmt[i] <- concs$total_mix[i]*dilConc
concs$drugAmt[i] <- 0
concs$totaldrug[i] <- 0
concs$drugDilute[i] <- 0
concs$dilDilute[i] <- 0
concs$aliquotAmt[i] <- 0
concs$lysate[i] <-  concs$total_mix[i] - concs$dilAmt[i]
concs$drugTubes[i] <- 1
} else
if(concs$drug[i] == "cisplatin") {
concs$dilAmt[i] <- 0
}
}
#Truncate decimals
concs$dilAmt <- round(concs$dilAmt, digits = 2)
concs$drugAmt <- round(concs$drugAmt, digits = 2)
concs <- concs %>%
dplyr::select(drugTubes, drug, diluent, drugDilute, dilDilute, drugAmt, dilAmt, lysate, total_mix, startConc, intConc, finConc, numPlates)
#If lysate is exact, add another tube
lysate <- sum(concs$total_mix)
if((lysate %% 10000) == 0) {
lysate <- lysate + 10000
}
lysate_mix <- (paste0("Total lysate mix needed: ", lysate / 1000, " mL, actually make: ", ceiling(lysate / 10000)*10, " mL"))
lysate_tubes <- (paste0("Number of lysate tubes needed: ", ceiling(lysate / 10000)))
lysate <- ceiling(lysate / 10000) *10000
lysate_K <- (paste0("Add ",  lysate / 10000 * 9, " mL of K medium to lysate."))
kan <- (paste0("Add ", 50*lysate/80000, " uL of Kanamycin to lysate mix."))
drug_dilution <- concs %>%
dplyr::mutate(drugDilute = ifelse(dilDilute == 0, NA, drugDilute), dilDilute = ifelse(dilDilute == 0, NA, dilDilute)) %>%
dplyr::select(tubes = drugTubes, drug, diluent, `drugDilute (uL)` = drugDilute, `dilDilute (uL)` = dilDilute, `startConc (mM)` = startConc,
`intConc (mM)` = intConc) %>%
dplyr::filter(!(drug %in% c("DMSO", "water"))) %>%
dplyr::distinct()
plate_dilution <- concs %>%
dplyr::mutate(lysate = lysate / 1000,
total_mix = total_mix / 1000) %>%
dplyr::select(drug, diluent, `drug (uL)` = drugAmt, `dil (uL)` = dilAmt, `lysate (mL)` = lysate, `total (mL)` = total_mix,
`startConc (mM)` = startConc, `finConc (uM)` = finConc, plates = numPlates)
special <- NULL
if("cisplatin" %in% unique(concs$drug)){
special <- ("For cisplatin: heat at 55Â°C with shaking for 5 minutes and make dilution right after.")
}
#Render markdown
render("~/Dropbox/AndersenLab/RCode/HTA_dilutions/non-dose/sorter_dilution.Rmd", output_file = paste0(outputdir, outputname, ".pdf"))
library(dplyr)
library(knitr)
library(plyr)
library(DT)
library(rmarkdown)
library(kableExtra)
setwd("~/Dropbox/AndersenLab/RCode/HTA_dilutions/")
##---------------------------##
##    EDIT THE FOLLOWING:    ##
##---------------------------##
# Edit the input file:
concs <- read.csv("~/Dropbox/AndersenLab/LabFolders/Katie/projects/chemos/HTA_sorter/20180618_tripleassay/day1_input.csv")
# EDIT name/directory for output file:
outputdir <- "~/Dropbox/AndersenLab/LabFolders/Katie/projects/chemos/HTA_sorter/20180618_tripleassay/"
outputname <- "Triple Assay Day1"
##---------------------------##
##     OPTIONAL EDITS        ##
##---------------------------##
# Will require a dilution by this number of each drug prior to adding to the lysate (10 recommended to reduce pipetting error for doses)
# If you don't want to dilute drug, use 1
dilution <- 1
# If your drug is not listed here you can add it to this file:
aliquotAmt <- read.csv("~/Dropbox/AndersenLab/RCode/HTA_dilutions/drug_aliquot_amount.csv", strip.white = TRUE)
# Always 1%
dilConc <- 0.01
# Minimum amount to pipette: 0.5 uL
min <- 0.5
# Can adjust if you want more room for error, I find 5 works well usually
leftover <- 7
##---------------------------##
##                           ##
##---------------------------##
#How many plates?
concs <- concs %>%
dplyr::mutate(totalWells = numPlates*numWells)
plates <- paste0("Need ", floor(sum(concs$totalWells/96)), " plates.")
concs <- concs %>%
dplyr::mutate(intConc = startConc / dilution)
#Drug Plates
drugconc <- concs %>%
dplyr::mutate(numWells = numWells + leftover, #Use 100 wells/plate instead of 96 wells/plate to allow for error
total_mix = numPlates * numWells * 50,
drugAmt = (total_mix * finConc) / (intConc * 1000)) %>%
dplyr::group_by(drug) %>%
dplyr::mutate(totaldrug = sum(drugAmt),
drugDilute = ceiling((totaldrug * intConc) / startConc),
dilDilute = (drugDilute * dilution) - drugDilute,
dilAmt = (total_mix * dilConc) - drugAmt,
lysate = total_mix - (drugAmt + dilAmt)) %>%
dplyr::left_join(aliquotAmt, by = "drug") %>%
dplyr::mutate(drugTubes = ifelse((drugDilute %% aliquotAmt) == 0, ceiling(drugDilute / aliquotAmt) + 1,
ceiling(drugDilute / aliquotAmt)))
# Check to make sure dilution is enough, should not pipette less than the minimum amount
tooSmall <- drugconc %>%
dplyr::filter(drugAmt < min, drugAmt > 0)
drugconc2 <- drugconc
while(nrow(tooSmall) > 0) {
drugconc2 <- drugconc2 %>%
dplyr::select(names(concs))
oldconcs <- drugconc2 %>%
dplyr::filter(!(drug %in% unique(tooSmall$drug)))
concs2 <- drugconc2 %>%
dplyr::filter(drug %in% unique(tooSmall$drug)) %>%
dplyr::mutate(intConc = intConc / 10)
newconcs <- rbind(oldconcs, concs2)
drugconc2 <- newconcs %>%
dplyr::mutate(total_mix = numPlates * numWells * 50,
drugAmt = (total_mix * finConc) / (intConc * 1000)) %>%
dplyr::group_by(drug) %>%
dplyr::mutate(totaldrug = sum(drugAmt),
drugDilute = ceiling((totaldrug * intConc) / startConc),
dilDilute = (drugDilute * startConc/intConc) - drugDilute,
dilAmt = (total_mix * dilConc) - drugAmt,
lysate = total_mix - (drugAmt + dilAmt)) %>%
dplyr::left_join(aliquotAmt, by = "drug") %>%
dplyr::mutate(drugTubes = ifelse((drugDilute %% aliquotAmt) == 0, ceiling(drugDilute / aliquotAmt) + 1,
ceiling(drugDilute / aliquotAmt)))
tooSmall <- drugconc2 %>%
dplyr::filter(drugAmt < min, drugAmt > 0)
}
concs <- drugconc2
#Special conditions
for(i in 1:length(concs$drug)){
if(concs$drug[i] %in% c("water", "DMSO")) {
concs$dilAmt[i] <- concs$total_mix[i]*dilConc
concs$drugAmt[i] <- 0
concs$totaldrug[i] <- 0
concs$drugDilute[i] <- 0
concs$dilDilute[i] <- 0
concs$aliquotAmt[i] <- 0
concs$lysate[i] <-  concs$total_mix[i] - concs$dilAmt[i]
concs$drugTubes[i] <- 1
} else
if(concs$drug[i] == "cisplatin") {
concs$dilAmt[i] <- 0
}
}
#Truncate decimals
concs$dilAmt <- round(concs$dilAmt, digits = 2)
concs$drugAmt <- round(concs$drugAmt, digits = 2)
concs <- concs %>%
dplyr::select(drugTubes, drug, diluent, drugDilute, dilDilute, drugAmt, dilAmt, lysate, total_mix, startConc, intConc, finConc, numPlates)
#If lysate is exact, add another tube
lysate <- sum(concs$total_mix)
if((lysate %% 10000) == 0) {
lysate <- lysate + 10000
}
lysate_mix <- (paste0("Total lysate mix needed: ", lysate / 1000, " mL, actually make: ", ceiling(lysate / 10000)*10, " mL"))
lysate_tubes <- (paste0("Number of lysate tubes needed: ", ceiling(lysate / 10000)))
lysate <- ceiling(lysate / 10000) *10000
lysate_K <- (paste0("Add ",  lysate / 10000 * 9, " mL of K medium to lysate."))
kan <- (paste0("Add ", 50*lysate/80000, " uL of Kanamycin to lysate mix."))
drug_dilution <- concs %>%
dplyr::mutate(drugDilute = ifelse(dilDilute == 0, NA, drugDilute), dilDilute = ifelse(dilDilute == 0, NA, dilDilute)) %>%
dplyr::select(tubes = drugTubes, drug, diluent, `drugDilute (uL)` = drugDilute, `dilDilute (uL)` = dilDilute, `startConc (mM)` = startConc,
`intConc (mM)` = intConc) %>%
dplyr::filter(!(drug %in% c("DMSO", "water"))) %>%
dplyr::distinct()
plate_dilution <- concs %>%
dplyr::mutate(lysate = lysate / 1000,
total_mix = total_mix / 1000) %>%
dplyr::select(drug, diluent, `drug (uL)` = drugAmt, `dil (uL)` = dilAmt, `lysate (mL)` = lysate, `total (mL)` = total_mix,
`startConc (mM)` = startConc, `finConc (uM)` = finConc, plates = numPlates)
special <- NULL
if("cisplatin" %in% unique(concs$drug)){
special <- ("For cisplatin: heat at 55Â°C with shaking for 5 minutes and make dilution right after.")
}
#Render markdown
render("~/Dropbox/AndersenLab/RCode/HTA_dilutions/non-dose/sorter_dilution.Rmd", output_file = paste0(outputdir, outputname, ".pdf"))
library(dplyr)
library(linkagemapping)
library(qtl)
data("N2xCB4856cross")
load("~/Dropbox/AndersenLab/QTLpaper/git_repo/QTLhotspot/data/FileS2_allRIAILregressed.RData")
load("~/Dropbox/AndersenLab/QTLpaper/git_repo/QTLhotspot/data/FileS7_uniqueQTL.RData")
load("~/Dropbox/AndersenLab/QTLpaper/scripts/GWER_mapping/scantwo/data/20180613_otherQTL.RData")
allRIAILregressed <- allRIAILregressed %>%
dplyr::mutate(drugtrait = paste0(condition, ".", trait))
setwd("~/Dropbox/AndersenLab/QTLpaper/scripts/GWER_mapping/scantwo/data/")
scantwothousand <- NULL
setwd("~/Dropbox/AndersenLab/QTLpaper/scripts/GWER_mapping/scantwo/data/")
load("20180613_scantwothousand_quantiles.RData")
for(t in unique(otherQTL$drugtrait)) {
# read in tsv
df <- readr::read_tsv(paste0(t, ".quantiles.tsv"))
# read in scan2thousand
load(paste0(t, ".scan2thousand.Rda"))
# df$int <- quantile(scan2thousand$int, probs = 0.95)
scantwothousand <- rbind(scantwothousand, df)
}
unique(otherQTL$drugtrait)
for(t in unique(otherQTL$trait)) {
# read in tsv
df <- readr::read_tsv(paste0(t, ".quantiles.tsv"))
# read in scan2thousand
load(paste0(t, ".scan2thousand.Rda"))
# df$int <- quantile(scan2thousand$int, probs = 0.95)
scantwothousand <- rbind(scantwothousand, df)
}
View(scantwothousand)
save(scantwothousand, file = "20180614_scantwothousand_quantiles.RData")
load("~/Dropbox/AndersenLab/QTLpaper/git_repo/QTLhotspot/data/FileS3_allAnnotatedLods.RData")
allRIAILregressed <- allRIAILregressed %>%
dplyr::mutate(drugtrait = paste0(condition, ".", trait))
allscan2summary <- NULL
for(i in unique(allAnnotatedLods$trait)) {
# phenotype data
pheno <- allRIAILregressed %>%
dplyr::filter(drugtrait == i)
#create completed cross object with pheno data set
mapcross <- mergepheno(N2xCB4856cross, pheno, set = 2)
#WHAT I PRESENTED IN ONC DEV BIO ON 10/07/15 WAS THE SCAN TWO OF ALL REGRESSED TRAITS IN BLEO (PHENO COL= 3: LENGTH(PHENAMES(MAPCROSS)))
scan2 <- scantwo(mapcross, pheno.col=3, method="mr")
summary <- summary(scan2) %>%
dplyr::mutate(trait = i)
allscan2summary <- rbind(allscan2summary, summary)
}
load("~/Dropbox/AndersenLab/QTLpaper/git_repo/QTLhotspot/data/FileS4_scantwosummary.RData")
View(scantwosummary)
scantwosummary <- scantwosummary %>% dplyr::select(chr1:trait)
length(unique(scantwosummary$trait))
allscan2summary <- scantwosummary
for(i in unique(otherQTL$trait)) {
# phenotype data
pheno <- allRIAILregressed %>%
dplyr::filter(drugtrait == i)
#create completed cross object with pheno data set
mapcross <- mergepheno(N2xCB4856cross, pheno, set = 2)
#WHAT I PRESENTED IN ONC DEV BIO ON 10/07/15 WAS THE SCAN TWO OF ALL REGRESSED TRAITS IN BLEO (PHENO COL= 3: LENGTH(PHENAMES(MAPCROSS)))
scan2 <- scantwo(mapcross, pheno.col=3, method="mr")
summary <- summary(scan2) %>%
dplyr::mutate(trait = i)
allscan2summary <- rbind(allscan2summary, summary)
}
unique(allscan2summary$trait)
scantwosummary <- allscan2summary
save(scantwosummary, file = "~/Dropbox/AndersenLab/QTLpaper/git_repo/QTLhotspot/data/FileS4_scantwosummary.RData")
load("~/Dropbox/AndersenLab/QTLpaper/git_repo/QTLhotspot/data/FileS4_scantwosummary.RData")
load("~/Dropbox/AndersenLab/QTLpaper/git_repo/QTLhotspot/data/FileS11_assays_category.RData")
load("~/Dropbox/AndersenLab/QTLpaper/git_repo/QTLhotspot/data/FileS7_uniqueQTL.RData")
load("~/Dropbox/AndersenLab/QTLpaper/scripts/GWER_mapping/scantwo/data/20180614_scantwothousand_quantiles.RData")
test <- scantwosummary %>%
dplyr::filter(trait %in% uniqueQTL$drugtrait) %>%
dplyr::filter(chr1 == chr2) %>%
dplyr::mutate(add_diff = abs(pos2a - pos1a),
int_diff = abs(pos2f - pos1f))
ggplot(data = test, aes(x = add_diff, y = lod.av1)) +
geom_point() +
geom_hline(yintercept = 3.6, color = "red") +
geom_vline(xintercept = 5)
library(ggplot2)
ggplot(data = test, aes(x = add_diff, y = lod.av1)) +
geom_point() +
geom_hline(yintercept = 3.6, color = "red") +
geom_vline(xintercept = 5)
scantwosummary <- scantwosummary %>%
dplyr::left_join(scantwothousand, by = "trait") %>%
dplyr::rename("av1_thresh" = av1, "fv1_thresh" = fv1, "full_thresh" = full, "int_thresh" = int, "add_thresh" = add)
unique(scantwosummary$trait)
View(scantwosummary)
save(scantwosummary, file = "~/Dropbox/AndersenLab/QTLpaper/git_repo/QTLhotspot/data/FileS4_scantwosummary.RData")
additive1 <- scantwosummary %>%
dplyr::filter(lod.av1 > av1) %>%
dplyr::filter(chr1 == chr2) %>%
dplyr::filter(abs(pos2a - pos1a) > 5)
additive1 <- scantwosummary %>%
dplyr::filter(lod.av1 > av1_thresh) %>%
dplyr::filter(chr1 == chr2) %>%
dplyr::filter(abs(pos2a - pos1a) > 5)
additive2 <- scantwosummary %>%
dplyr::filter(lod.av1 > av1_thresh) %>%
dplyr::filter(chr1 != chr2)
additive <- rbind(additive1, additive2)
length(unique(additive$trait))
interactive1 <- scantwosummary %>%
dplyr::filter(lod.int > int_thresh) %>%
dplyr::filter(chr1 == chr2) %>%
dplyr::filter(abs(pos2f - pos1f) > 5)
interactive2 <- scantwosummary %>%
dplyr::filter(lod.int > int_thresh) %>%
dplyr::filter(chr1 != chr2)
interactive <- rbind(interactive1, interactive2)
length(unique(interactive$trait))
categories13 <- assays_category %>%
dplyr::filter(!is.na(secondary_category)) %>%
dplyr::mutate(drugtrait = paste(condition, trait, sep = ".")) %>%
dplyr::distinct(drugtrait) %>%
dplyr::pull(drugtrait)
additive13 <- additive %>%
dplyr::filter(trait %in% categories13)
interactive13 <- interactive %>%
dplyr::filter(trait %in% categories13)
scantwo13 <- scantwosummary %>%
dplyr::filter(trait %in% categories13) %>%
dplyr::filter(chr1 == "V" | chr2 == "V") %>%
dplyr::group_by(trait) %>%
dplyr::arrange(trait, desc(lod.int), desc(lod.av1))
View(additive13)
View(additive)
View(additive13)
View(assays_category)
test <- scantwosummary %>% dplyr::filter(trait == "cisplatin.q90.EXT", chr1 == "V" | chr2 == "V")
View(test)
source("~/Dropbox/AndersenLab/LabFolders/Katie/projects/chemos/scripts/NIL_genotype_plots.R")
nil_plot(c("ECA554", "ECA573"), chr = "V", all.chr = T)
nil_plot(c("ECA428", "ECA528"), chr = "V", all.chr = T)
nil_plot(c("ECA428", "ECA528", "ECA411"), chr = "V", all.chr = T)
nil_plot(c("ECA428", "ECA528", "ECA411"), chr = "V", all.chr = T) + geom_vline(xintercept = 2.32)
nil_plot(c("ECA428", "ECA528", "ECA411"), chr = "V", all.chr = T)[[1]] + geom_vline(xintercept = 2.32)
library(dplyr)
library(knitr)
library(plyr)
library(DT)
library(rmarkdown)
library(kableExtra)
setwd("~/Dropbox/AndersenLab/RCode/HTA_dilutions/")
##---------------------------##
##    EDIT THE FOLLOWING:    ##
##---------------------------##
# Edit the input file:
concs <- read.csv("~/Dropbox/AndersenLab/LabFolders/Katie/projects/chemos/HTA_sorter/20180618_tripleassay/day2_input.csv")
# EDIT name/directory for output file:
outputdir <- "~/Dropbox/AndersenLab/LabFolders/Katie/projects/chemos/HTA_sorter/20180618_tripleassay/"
outputname <- "Triple Assay Day2"
##---------------------------##
##     OPTIONAL EDITS        ##
##---------------------------##
# Will require a dilution by this number of each drug prior to adding to the lysate (10 recommended to reduce pipetting error for doses)
# If you don't want to dilute drug, use 1
dilution <- 1
# If your drug is not listed here you can add it to this file:
aliquotAmt <- read.csv("~/Dropbox/AndersenLab/RCode/HTA_dilutions/drug_aliquot_amount.csv", strip.white = TRUE)
# Always 1%
dilConc <- 0.01
# Minimum amount to pipette: 0.5 uL
min <- 0.5
# Can adjust if you want more room for error, I find 5 works well usually
leftover <- 5
##---------------------------##
##                           ##
##---------------------------##
#How many plates?
concs <- concs %>%
dplyr::mutate(totalWells = numPlates*numWells)
plates <- paste0("Need ", floor(sum(concs$totalWells/96)), " plates.")
concs <- concs %>%
dplyr::mutate(intConc = startConc / dilution)
#Drug Plates
drugconc <- concs %>%
dplyr::mutate(numWells = numWells + leftover, #Use 100 wells/plate instead of 96 wells/plate to allow for error
total_mix = numPlates * numWells * 50,
drugAmt = (total_mix * finConc) / (intConc * 1000)) %>%
dplyr::group_by(drug) %>%
dplyr::mutate(totaldrug = sum(drugAmt),
drugDilute = ceiling((totaldrug * intConc) / startConc),
dilDilute = (drugDilute * dilution) - drugDilute,
dilAmt = (total_mix * dilConc) - drugAmt,
lysate = total_mix - (drugAmt + dilAmt)) %>%
dplyr::left_join(aliquotAmt, by = "drug") %>%
dplyr::mutate(drugTubes = ifelse((drugDilute %% aliquotAmt) == 0, ceiling(drugDilute / aliquotAmt) + 1,
ceiling(drugDilute / aliquotAmt)))
# Check to make sure dilution is enough, should not pipette less than the minimum amount
tooSmall <- drugconc %>%
dplyr::filter(drugAmt < min, drugAmt > 0)
drugconc2 <- drugconc
while(nrow(tooSmall) > 0) {
drugconc2 <- drugconc2 %>%
dplyr::select(names(concs))
oldconcs <- drugconc2 %>%
dplyr::filter(!(drug %in% unique(tooSmall$drug)))
concs2 <- drugconc2 %>%
dplyr::filter(drug %in% unique(tooSmall$drug)) %>%
dplyr::mutate(intConc = intConc / 10)
newconcs <- rbind(oldconcs, concs2)
drugconc2 <- newconcs %>%
dplyr::mutate(total_mix = numPlates * numWells * 50,
drugAmt = (total_mix * finConc) / (intConc * 1000)) %>%
dplyr::group_by(drug) %>%
dplyr::mutate(totaldrug = sum(drugAmt),
drugDilute = ceiling((totaldrug * intConc) / startConc),
dilDilute = (drugDilute * startConc/intConc) - drugDilute,
dilAmt = (total_mix * dilConc) - drugAmt,
lysate = total_mix - (drugAmt + dilAmt)) %>%
dplyr::left_join(aliquotAmt, by = "drug") %>%
dplyr::mutate(drugTubes = ifelse((drugDilute %% aliquotAmt) == 0, ceiling(drugDilute / aliquotAmt) + 1,
ceiling(drugDilute / aliquotAmt)))
tooSmall <- drugconc2 %>%
dplyr::filter(drugAmt < min, drugAmt > 0)
}
concs <- drugconc2
#Special conditions
for(i in 1:length(concs$drug)){
if(concs$drug[i] %in% c("water", "DMSO")) {
concs$dilAmt[i] <- concs$total_mix[i]*dilConc
concs$drugAmt[i] <- 0
concs$totaldrug[i] <- 0
concs$drugDilute[i] <- 0
concs$dilDilute[i] <- 0
concs$aliquotAmt[i] <- 0
concs$lysate[i] <-  concs$total_mix[i] - concs$dilAmt[i]
concs$drugTubes[i] <- 1
} else
if(concs$drug[i] == "cisplatin") {
concs$dilAmt[i] <- 0
}
}
#Truncate decimals
concs$dilAmt <- round(concs$dilAmt, digits = 2)
concs$drugAmt <- round(concs$drugAmt, digits = 2)
concs <- concs %>%
dplyr::select(drugTubes, drug, diluent, drugDilute, dilDilute, drugAmt, dilAmt, lysate, total_mix, startConc, intConc, finConc, numPlates)
#If lysate is exact, add another tube
lysate <- sum(concs$total_mix)
if((lysate %% 10000) == 0) {
lysate <- lysate + 10000
}
lysate_mix <- (paste0("Total lysate mix needed: ", lysate / 1000, " mL, actually make: ", ceiling(lysate / 10000)*10, " mL"))
lysate_tubes <- (paste0("Number of lysate tubes needed: ", ceiling(lysate / 10000)))
lysate <- ceiling(lysate / 10000) *10000
lysate_K <- (paste0("Add ",  lysate / 10000 * 9, " mL of K medium to lysate."))
kan <- (paste0("Add ", 50*lysate/80000, " uL of Kanamycin to lysate mix."))
drug_dilution <- concs %>%
dplyr::mutate(drugDilute = ifelse(dilDilute == 0, NA, drugDilute), dilDilute = ifelse(dilDilute == 0, NA, dilDilute)) %>%
dplyr::select(tubes = drugTubes, drug, diluent, `drugDilute (uL)` = drugDilute, `dilDilute (uL)` = dilDilute, `startConc (mM)` = startConc,
`intConc (mM)` = intConc) %>%
dplyr::filter(!(drug %in% c("DMSO", "water"))) %>%
dplyr::distinct()
plate_dilution <- concs %>%
dplyr::mutate(lysate = lysate / 1000,
total_mix = total_mix / 1000) %>%
dplyr::select(drug, diluent, `drug (uL)` = drugAmt, `dil (uL)` = dilAmt, `lysate (mL)` = lysate, `total (mL)` = total_mix,
`startConc (mM)` = startConc, `finConc (uM)` = finConc, plates = numPlates)
special <- NULL
if("cisplatin" %in% unique(concs$drug)){
special <- ("For cisplatin: heat at 55Â°C with shaking for 5 minutes and make dilution right after.")
}
#Render markdown
render("~/Dropbox/AndersenLab/RCode/HTA_dilutions/non-dose/sorter_dilution.Rmd", output_file = paste0(outputdir, outputname, ".pdf"))
